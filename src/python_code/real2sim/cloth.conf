general {
    base_exp_dir = ./exp/CASE_NAME/cloth
}

train {
    use_mesh = True
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    learning_rate_alpha_phy = 0.01
    end_iter = 300000

    batch_size = 25
    validate_resolution_level = 4
    warm_up_end = 5000
    warm_up_end_phy = 10000
    anneal_end = 50000
    use_white_bkgd = False
    use_white_bkgd = False
    # Depth
    geo_weight = 5.0
    angle_weight = 0.5

    # Gradient decay
    max_decay = 0.1
    decay_end = 3000

    save_freq = 10000
    val_freq = 2500
    val_mesh_freq = 1000000
    report_freq = 100

    max_pe_iter = 10000

    igr_weight = 0.1
    mask_weight = 0.0
    offsets_loss_weight = 50.0
    divergence_loss_weight = 2.0
    rigidity_loss_weight = 0.05
    bending_latent_size = 32
}
model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sim_deform {
        n_time_steps = 150
        time_step = 0.025
        n_threads = 10
        feat_size = 16
        gridNum = [15, 18]
        scale = 1.
        model_file = False
    }

    coord_map {
        d_in = 3
        d_out = 3
        d_hidden = 256
        n_layers = 6
        skip_in = [3,]
        multires = 6
        bias = 0.0
        scale = 1.0
        geometric_init = False
        weight_norm = True
    }

    sim_sdf_network {
        d_out = 257
        d_in = 20
        d_hidden = 32
        n_layers = 1
        skip_in = []
        multires = 6
        bias = 0.5
        scale = 1.0
        geometric_init = False
        weight_norm = True
    }

    res_sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_faces = 2364
        n_layers = 4
        skip_in = []
        multires = 6
        bias = 0.5
        scale = 1.0
        geometric_init = False
        weight_norm = True
        residual = True
    }

    sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_layers = 8
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 1.0
        geometric_init = True
        weight_norm = True
    }

    attribution_network {
        d_in = 3
        multires = 6
        d_hidden = 256
        d_latent = 32
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = idr
        d_in = 3
        d_out = 3
        d_hidden = 256
        n_layers = 4
        weight_norm = True
        multires_view = 4
        squeeze_out = True
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 128
        up_sample_steps = 4     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
    }

    bending_network {
        multires = 6
        bending_latent_size = 32
        d_in = 6
        rigidity_hidden_dimensions = 64
        rigidity_network_depth = 5
    }
}