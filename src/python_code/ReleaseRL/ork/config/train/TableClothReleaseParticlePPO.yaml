# ========== Trainer parameters ==========
Trainer:
#  task_name: BaseTaskParticle              # Task name for logging.
  experiment_name:                    # Experiment name for logging.
  experiment_directory:               # Experiment directory for logging.
  write_interval: 1                 # TensorBoard write interval for logging. (timesteps)
  checkpoint_interval: 5           # Checkpoint interval for logging. (timesteps)
  wandb: True                                  # If true, log to Weights & Biases.
  wandb_kwargs:                       # Weights & Biases kwargs. https://docs.wandb.ai/ref/python/init
    project: RofuncRL                          # Weights & Biases project name.
    name: ${..experiment_name}                 # Weights & Biases run name.
  rofunc_logger_kwargs:               # Rofunc BeautyLogger kwargs.
    verbose: True                     # If true, print to stdout.
  maximum_steps: 10000                 # The maximum number of steps to run for.
  random_steps: 0                     # The number of random exploration steps to take.
  start_learning_steps: 0             # The number of steps to take before starting network updating.
  seed: 0                            # The random seed.
  rollouts: 10                         # The number of rollouts before updating.
  eval_flag: False                     # If true, run evaluation.
  eval_freq: 1                     # The frequency of evaluation. (timesteps)
  eval_steps: 1                    # The number of steps to run for evaluation.
  inference_steps: 1               # The number of steps to run for inference.
  max_episode_steps: 1              # The maximum number of steps per episode.
# ========== Agent parameters ==========
Agent:
  discount: 0.99                      # The discount factor, gamma.
  td_lambda: 0.95                     # TD(lambda) coefficient (lam) for computing returns and advantages.

  learning_epochs: 10                 # The number of epochs to train for per update.
  mini_batch_size: 5                 # The number of samples per update.

  lr_a: 5e-4                        # Learning rate for actor.
  lr_c: 5e-4                        # Learning rate for critic.
  adam_eps: 1e-5                    # Adam epsilon.

  # If true, use the Generalized Advantage Estimator (GAE)
  # with a value function, see https://arxiv.org/pdf/1506.02438.pdf.
  use_gae: True

  entropy_loss_scale: 0.01         # entropy loss scaling factor
  value_loss_scale: 0.5            # value loss scaling factor

  grad_norm_clip: 0.5              # clipping coefficient for the norm of the gradients
  ratio_clip: 0.2                  # clipping coefficient for computing the clipped surrogate objective
  value_clip: 0.2                  # clipping coefficient for computing the value loss (if clip_predicted_values is True)
  clip_predicted_values: True      # clip predicted values during value loss computation

  kl_threshold: 0                  # Initial coefficient for KL divergence.

# ========= Model parameters ==========
Model:
  use_init: True
  use_same_model: True                 # If true, use the same model for actor and critic.
  use_action_clip: True               # If true, clip actions to the action space range.
  use_action_out_tanh: True           # If true, use tanh for the output of the actor.
  action_clip: 50.0                     # clipping coefficient for the norm of the actions
  action_scale: 50.0                    # scaling coefficient for the actions
  use_log_std_clip: True               # If true, clip log standard deviations to the range [-20, 2].
  log_std_clip_max: 2.0                # clipping coefficient for the log standard deviations
  log_std_clip_min: -20                # clipping coefficient for the log standard deviations

  actor:
    type: "Gaussian"  # ["Beta", "Gaussian"]
    mlp_hidden_dims: [ 64, 64 ]
#    mlp_hidden_dims: [ 128, 128 ]
    mlp_activation: tanh
    use_lstm: false
    lstm_cell_size: 256
    lstm_use_prev_action: false
    lstm_use_prev_reward: false
    max_seq_len: 20

  critic:
    mlp_hidden_dims: [ 64 ]
    mlp_activation: tanh
    use_lstm: false
    lstm_cell_size: 256
    lstm_use_prev_action: false
    lstm_use_prev_reward: false
    max_seq_len: 20

  discriminator:
    mlp_hidden_dims: [ 1024, 512 ]
    mlp_activation: relu
    use_lstm: false
    lstm_cell_size: 256
    lstm_use_prev_action: false
    lstm_use_prev_reward: false
    max_seq_len: 20